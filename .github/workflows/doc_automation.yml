# Upload orchestrator step logs for debugging and analysis
      - name: Upload step logs
        uses: actions/upload-artifact@v4
        with:
          name: orchestrator-step-logs
          path: orchestrator_artifacts/
          retention-days: 30
          if-no-files-found: warn

      # Auto-label PRs based on instruction priority and risk levels
      - name: Add labels based on priority/risk
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const instrDir = 'instructions';
            const labels = new Set();
            
            try {
              // Check if instructions directory exists
              if (!fs.existsSync(instrDir)) {
                console.log('No instructions directory found - skipping auto-label.');
                return;
              }
              
              // Process all JSON files in instructions directory
              const jsonFiles = fs.readdirSync(instrDir)
                .filter(file => file.endsWith('.json') && file !== 'schema.json');
              
              if (jsonFiles.length === 0) {
                console.log('No instruction files found - skipping auto-label.');
                return;
              }
              
              for (const file of jsonFiles) {
                const instrPath = path.join(instrDir, file);
                try {
                  const instr = JSON.parse(fs.readFileSync(instrPath, 'utf8'));
                  
                  // Only process valid instruction files (must have id and action)
                  if (!instr.id || !instr.action) {
                    console.log(`Skipping ${file} - not a valid instruction file`);
                    continue;
                  }
                  
                  // Add priority label
                  if (instr.priority) {
                    labels.add(`priority: ${instr.priority}`);
                  }
                  
                  // Add risk label
                  if (instr.risk) {
                    labels.add(`risk: ${instr.risk}`);
                  }
                  
                  console.log(`Processed ${file}: priority=${instr.priority || 'none'}, risk=${instr.risk || 'none'}`);
                  
                } catch (parseError) {
                  console.log(`Skipping ${file} - JSON parse error: ${parseError.message}`);
                }
              }
              
              // Apply labels if any were found
              if (labels.size > 0) {
                const labelArray = Array.from(labels);
                console.log(`Adding labels: ${labelArray.join(', ')}`);
                
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  labels: labelArray
                });
                
                console.log(`Successfully applied ${labelArray.length} labels to PR #${context.issue.number}`);
              } else {
                console.log("No priority/risk found in any instruction files - skipping auto-label.");
              }
              
            } catch (error) {
              console.error(`Error processing instruction files: ${error.message}`);
              // Don't fail the workflow on labeling errors
            }